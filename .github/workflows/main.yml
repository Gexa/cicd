name: Main CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  install:
    name: Install packages
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm i
      - name: "Save node_modules"
        uses: actions/upload-artifact@v4
        with:
          name: node_modules
          path: node_modules
          retention-days: 1

  test:
    name: Run ESLint and Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules
      - run: npm run lint
      - name: Test
        if: steps.download.outcome == 'success'
        run: npm test

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: check
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Download node_modules
        id: download
        uses: actions/download-artifact@v4
        with:
          name: node_modules
      - run: npm run build --if-present
